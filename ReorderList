/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        if (head == null || head.next == null) return;
        Stack<ListNode> stack = new Stack<>();
        ListNode temp = head;
        while (temp != null) {
            stack.push(temp);
            temp = temp.next;
        }
        temp = head;
        ListNode headRef = temp;
        ListNode next = null;
        int idx = 0;
        int len = stack.size() / 2;  
        while (idx < len) { // 123456
            next = temp.next; // 2
            temp.next = stack.pop(); // 1-> 6
            temp.next.next = next; // 1 -> 6 -> 2
            temp = temp.next.next;   //  
            idx++;
        }
        temp.next = null;
        head = headRef;
    } 
}
