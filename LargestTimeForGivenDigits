class Solution {
    public String largestTimeFromDigits(int[] A) {
        Arrays.sort(A);
        if (A[0] >= 3) {                                // 3333 - 9999
            return "";
        }
        if (A[1] >= 6) {                                // x666 
            return "";
        }
        if (A[0] == 2 && A[1] <= 3  && A[2] >= 6) {     // 2266 - 2299 || 2366 - 2399
            return "";
        }
        if (A[0] == 2 && A[1] >= 4) {                   // 2444-2999
            return "";
        }
        String d1 = Integer.toString(A[0]); 
        String d2 = Integer.toString(A[1]); 
        String d3 = Integer.toString(A[2]); 
        String d4 = Integer.toString(A[3]); 
        if (A[2] >= 6) {                                // xx66 - xx99
            if (A[1] <= 1) {                            // 0166 - 0199 || 1166 - 1199
                return d2 + d4 + ":" + d1 + d3; 
            }
            return d1 + d4 + ":" + d2 + d3;
        }
        if (A[2] == 3 && A[1] == 2) { // x23x - x23x
            return A[3] <= 5 ? d2 + d3 + ":" + d4 + d1 : d2 + d3 + ":" + d1 + d4; 
        }
        
        if (A[3] <= 2) {                                // 0002 - 1112 
            return d4 + d3 + ":" + d2 + d1; 
        }
        return d1 + d2 + ":" + d3 + d4;
    }
}

 
