/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int sum = 0;
        return sumLeftLeaves(root, sum, false);
    }
    
    public int sumLeftLeaves(TreeNode node, int sum, boolean isLeft) {
        if (node != null) {
            int total = 0;
            if (isLeft && node.left == null && node.right == null) {
                return sum + node.val;
            }
            total += sumLeftLeaves(node.left, sum, true);
            total += sumLeftLeaves(node.right, sum, false);
            return total;
        }
        return sum;
    }
}
